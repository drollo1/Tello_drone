#include "Tello_drone.h"

#define PORT	8889

Tello_drone::Tello_drone(){
	isConnected = false;
}

Tello_drone::~Tello_drone(){

}

int Tello_drone::connectDrone(){
	if(!isConnected){
		//create socket descriptor
		int sock;
		if (0 > (sock = socket(AF_INET, SOCK_DGRAM, 0))){
			printf("Can't create UDP sockect");
			fflush(stdout);
			return sock;
		}
		//for releasing socket right away
//		int sockoptval = 1;
//		setsockopt(svc, SOL_SOCKET, SO_REUSEADDR, &sockoptval, sizeof(int));

		struct sockaddr_in servaddr;
		memset(&servaddr, 0, sizeof(servaddr));
		servaddr.sin_family = AF_INET;
		servaddr.sin_port = htons(PORT);
		servaddr.sin_addr.s_addr = inet_addr("192.168.10.1");

		struct sockaddr_in clientaddr;
		memset(&clientaddr, 0, sizeof(clientaddr));
		clientaddr.sin_family = AF_INET;
		clientaddr.sin_port = htons(8890);
		clientaddr.sin_addr.s_addr = INADDR_ANY;
		if (0 > (bind(sock, (struct sockaddr *)&clientaddr, sizeof(clientaddr)))){
			printf("Couldn't bind to local port 8890\n");
			fflush(stdout);
			return -1;
		}

		int n, len;

		char *command = "command";
		char *takeoff = "takeoff";
		char *land = "land";
		sendto(sock, (const char*)command, strlen(command), 0, (struct sockaddr*) &servaddr, sizeof(servaddr));
		printf("sent command: ");
		fflush(stdout);

		char buffer[256];
		socklen_t addr_len;

		n = recvfrom(sock, (char *) buffer, 256, 0, (struct sockaddr *) &servaddr, &addr_len);
		printf("%s\n", buffer);
		fflush(stdout);

		sendto(sock, (const char*)takeoff, strlen(takeoff), 0, (struct sockaddr*) &servaddr, sizeof(servaddr));
		printf("sent takeoff\n");
		fflush(stdout);

		n = recvfrom(sock, (char *) buffer, 256, 0, (struct sockaddr *) &servaddr, &addr_len);
		printf("%s", buffer);
		fflush(stdout);

		sendto(sock, (const char*)land, strlen(land), 0, (struct sockaddr*) &servaddr, sizeof(servaddr));
		printf("sent land\n");
		fflush(stdout);

		n = recvfrom(sock, (char *) buffer, 256, 0, (struct sockaddr *) &servaddr, &addr_len);
		printf("%s", buffer);
		fflush(stdout);

		close(sock);
		return 1;
	}
	else{
		printf("Already Connected to tello drone\n");
		fflush(stdout);
		return 0;
	}
}
